trigger:
  branches:
    include:
      - feature/*
      - master
      - release/*
  paths:
    include:
      - CDN
    exclude:
      - /

pool:
  vmImage: 'ubuntu-20.04'
resources:
  repositories:
    - repository: AmidoEcommerce
      type: git
      name: Amido.Ecommerce.Infrastructure/Amido.Ecommerce.Infrastructure.Templates
      ref: refs/tags/stable
      #ref: refs/heads/feature/24163-refactor-publish-storageaccount-data

variables:
  # Global Variables
  - name: tag
    value: '$(Build.BuildId)'
  # Versioning
  - name: Version.Major
    value: 0
  - name: Version.Minor
    value: 1
  - name: Version.Revision
    value: $[counter(variables['Version.Minor'], 0)]
  - name: storage_container_name
    value: 'input'
  - name: file_extentions
    value: '*'
  - name: content_folder
    value: ''

stages:
  # Build
  - stage: Prereqs
    displayName: 'Prerequisites'
    jobs:
      - template: azDevOps/azure/templates/jobs/build-updatebuildnumber.yml
        parameters:
          build_number: '$(Version.Major).$(Version.Minor).$(Version.Revision)'

  - stage: deploy_sandbox_eun
    displayName: 'Deploy to Sandbox EUN'
    dependsOn: Prereqs
    condition: and(succeeded('Prereqs'), not(startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), or(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.Reason'], 'Manual'))))
    variables:
      - group: UI.Static-Content
      - group: SX.eCommerce.UI.Static-Content.Keys.EUN
      - group: Sandbox.Akamai.Purge
      - group: SX.eCommerce.Browse01.KV
    jobs:
      - template: azDevOps/azure/templates/jobs/upload-files-storageaccount.yml
        parameters:
          environmentName: 'sxeun'
          source_directory: '$(System.DefaultWorkingDirectory)'
          storage_account_name: '$(CDN-StorageAccount-Name)'
          storage_account_key: '$(CDN-StorageAccount-Key)'
          storage_container_name: '$(storage_container_name)'
          file_extentions: '$(file_extentions)'
          content_folder: '$(content_folder)'
          git_diff_upload: true
          delete_all_files: false
      - job: Config_Cache_Clear
        steps:
          - template: azDevOps/azure/templates/steps/download-scripts-package-from-devops.yml
          - template: azDevOps/azure/templates/steps/login-services.yml
            parameters:
              # Azure
              login_azure: true
              azure_tenant_id: '$(domain-spn-tenantid)'
              azure_subscription_id: '$(domain-spn-subscriptionid)'
              azure_client_id: '$(domain-spn-clientid)'
              azure_client_secret: '$(domain-spn-password)'
          - template: ./templates/steps/purge-config-cache.yml
            parameters:
              akamai_access_token: '$(akamai_access_token)'
              akamai_client_secret: '$(akamai_client_secret)'
              akamai_client_token: '$(akamai_client_token)'
              akamai_host: '$(akamai_host)'
              akamai_edgerc_path: 'CDN/akamai.edgerc'
              storage_account_name: $(CDN-StorageAccount-Name)
              storage_account_container: $(storage_container_name)
              storage_account_path: 'configs/abplatform'
              azure_subscription: '$(domain-spn-subscriptionid)'
              site_url: 'https://sxeun-test.next.co.uk'

  - stage: deploy_sandbox_euw
    displayName: 'Deploy to Sandbox EUW'
    dependsOn: Prereqs
    condition: and(succeeded('Prereqs'), not(startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), or(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.Reason'], 'Manual'))))
    variables:
      - group: UI.Static-Content
      - group: SX.eCommerce.UI.Static-Content.Keys.EUW
      - group: Sandbox.Akamai.Purge
      - group: SX.eCommerce.Browse01.KV
    jobs:
      - template: azDevOps/azure/templates/jobs/upload-files-storageaccount.yml
        parameters:
          environmentName: 'sxeuw'
          source_directory: '$(System.DefaultWorkingDirectory)'
          storage_account_name: '$(CDN-StorageAccount-Name)'
          storage_account_key: '$(CDN-StorageAccount-Key)'
          storage_container_name: '$(storage_container_name)'
          file_extentions: '$(file_extentions)'
          content_folder: '$(content_folder)'
          git_diff_upload: true
          delete_all_files: false
      - job: Config_Cache_Clear
        steps:
          - template: azDevOps/azure/templates/steps/download-scripts-package-from-devops.yml
          - template: azDevOps/azure/templates/steps/login-services.yml
            parameters:
              # Azure
              login_azure: true
              azure_tenant_id: '$(domain-spn-tenantid)'
              azure_subscription_id: '$(domain-spn-subscriptionid)'
              azure_client_id: '$(domain-spn-clientid)'
              azure_client_secret: '$(domain-spn-password)'
          - template: ./templates/steps/purge-config-cache.yml
            parameters:
              akamai_access_token: '$(akamai_access_token)'
              akamai_client_secret: '$(akamai_client_secret)'
              akamai_client_token: '$(akamai_client_token)'
              akamai_host: '$(akamai_host)'
              akamai_edgerc_path: 'CDN/akamai.edgerc'
              storage_account_name: $(CDN-StorageAccount-Name)
              storage_account_container: $(storage_container_name)
              storage_account_path: 'configs/abplatform'
              azure_subscription: '$(domain-spn-subscriptionid)'
              site_url: 'https://sxeuw-test.next.co.uk'

  - stage: deploy_ci_eun
    displayName: 'Deploy to CI EUN'
    dependsOn:
      - deploy_sandbox_eun
      - deploy_sandbox_euw
    condition:
      and(succeeded('Prereqs'), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'),
      startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')))
    variables:
      - group: UI.Static-Content
      - group: CI.eCommerce.UI.Static-Content.Keys.EUN
      - group: CI.Akamai.Purge
      - group: CI.Ecommerce.Browse01.SPN
    jobs:
      - template: azDevOps/azure/templates/jobs/upload-files-storageaccount.yml
        parameters:
          environmentName: 'cieun'
          source_directory: '$(System.DefaultWorkingDirectory)'
          storage_account_name: '$(CDN-StorageAccount-Name)'
          storage_account_key: '$(CDN-StorageAccount-Key)'
          storage_container_name: '$(storage_container_name)'
          file_extentions: '$(file_extentions)'
          content_folder: '$(content_folder)'
          git_diff_upload: true
          delete_all_files: false
      - job: Config_Cache_Clear
        steps:
          - template: azDevOps/azure/templates/steps/download-scripts-package-from-devops.yml
          - template: azDevOps/azure/templates/steps/login-services.yml
            parameters:
              # Azure
              login_azure: true
              azure_tenant_id: '$(domain-spn-tenantid)'
              azure_subscription_id: '$(domain-spn-subscriptionid)'
              azure_client_id: '$(domain-spn-clientid)'
              azure_client_secret: '$(domain-spn-password)'
          - template: ./templates/steps/purge-config-cache.yml
            parameters:
              akamai_access_token: '$(akamai_access_token)'
              akamai_client_secret: '$(akamai_client_secret)'
              akamai_client_token: '$(akamai_client_token)'
              akamai_host: '$(akamai_host)'
              akamai_edgerc_path: 'CDN/akamai.edgerc'
              storage_account_name: $(CDN-StorageAccount-Name)
              storage_account_container: $(storage_container_name)
              storage_account_path: 'configs/abplatform'
              azure_subscription: '$(domain-spn-subscriptionid)'
              site_url: 'https://cieun-test.next.co.uk'

  - stage: deploy_ci_euw
    displayName: 'Deploy to CI EUW'
    dependsOn:
      - deploy_sandbox_eun
      - deploy_sandbox_euw
    condition:
      and(succeeded('Prereqs'), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'),
      startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')))
    variables:
      - group: UI.Static-Content
      - group: CI.eCommerce.UI.Static-Content.Keys.EUW
      - group: CI.Akamai.Purge
      - group: CI.Ecommerce.Browse01.SPN
    jobs:
      - template: azDevOps/azure/templates/jobs/upload-files-storageaccount.yml
        parameters:
          environmentName: 'cieuw'
          source_directory: '$(System.DefaultWorkingDirectory)'
          storage_account_name: '$(CDN-StorageAccount-Name)'
          storage_account_key: '$(CDN-StorageAccount-Key)'
          storage_container_name: '$(storage_container_name)'
          file_extentions: '$(file_extentions)'
          content_folder: '$(content_folder)'
          git_diff_upload: true
          delete_all_files: false
      - job: Config_Cache_Clear
        steps:
          - template: azDevOps/azure/templates/steps/download-scripts-package-from-devops.yml
          - template: azDevOps/azure/templates/steps/login-services.yml
            parameters:
              # Azure
              login_azure: true
              azure_tenant_id: '$(domain-spn-tenantid)'
              azure_subscription_id: '$(domain-spn-subscriptionid)'
              azure_client_id: '$(domain-spn-clientid)'
              azure_client_secret: '$(domain-spn-password)'
          - template: ./templates/steps/purge-config-cache.yml
            parameters:
              akamai_access_token: '$(akamai_access_token)'
              akamai_client_secret: '$(akamai_client_secret)'
              akamai_client_token: '$(akamai_client_token)'
              akamai_host: '$(akamai_host)'
              akamai_edgerc_path: 'CDN/akamai.edgerc'
              storage_account_name: $(CDN-StorageAccount-Name)
              storage_account_container: $(storage_container_name)
              storage_account_path: 'configs/abplatform'
              azure_subscription: '$(domain-spn-subscriptionid)'
              site_url: 'https://cieuw-test.next.co.uk'

  - stage: deploy_pp_eun
    displayName: 'Deploy to PreProd EUN'
    dependsOn:
      - deploy_ci_eun
      - deploy_ci_euw
    condition:
      and(succeeded('Prereqs'), succeeded('deploy_ci_eun'), succeeded('deploy_ci_euw'),
      startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
    variables:
      - group: UI.Static-Content
      - group: PP.eCommerce.UI.Static-Content.Keys.EUN
    jobs:
      - template: azDevOps/azure/templates/jobs/upload-files-storageaccount.yml
        parameters:
          environmentName: 'pp'
          source_directory: '$(System.DefaultWorkingDirectory)'
          storage_account_name: '$(CDN-StorageAccount-Name)'
          storage_account_key: '$(CDN-StorageAccount-Key)'
          storage_container_name: '$(storage_container_name)'
          file_extentions: '$(file_extentions)'
          content_folder: '$(content_folder)'
          git_diff_upload: true
          delete_all_files: false

  - stage: deploy_pp_euw
    displayName: 'Deploy to PreProd EUW'
    dependsOn:
      - deploy_ci_eun
      - deploy_ci_euw
    condition:
      and(succeeded('Prereqs'), succeeded('deploy_ci_eun'), succeeded('deploy_ci_euw'),
      startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
    variables:
      - group: UI.Static-Content
      - group: PP.eCommerce.UI.Static-Content.Keys.EUW
    jobs:
      - template: azDevOps/azure/templates/jobs/upload-files-storageaccount.yml
        parameters:
          environmentName: 'pp'
          source_directory: '$(System.DefaultWorkingDirectory)'
          storage_account_name: '$(CDN-StorageAccount-Name)'
          storage_account_key: '$(CDN-StorageAccount-Key)'
          storage_container_name: '$(storage_container_name)'
          file_extentions: '$(file_extentions)'
          content_folder: '$(content_folder)'
          git_diff_upload: true
          delete_all_files: false

  - stage: 'Create_ServiceNow_Change'
    displayName: 'Raise ServiceNow Change'
    dependsOn:
      - deploy_pp_eun
      - deploy_pp_euw
    condition:
      and(succeeded('Prereqs'), succeeded('deploy_pp_eun'), succeeded('deploy_pp_euw'),
      startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
    variables:
      - group: 'ServiceNow'
      - name: 'Environment'
        value: 'Production'
    jobs:
      - deployment: ServiceNowChangeRaise
        environment: 'pd'
      - job: servicenow_raise_change
        displayName: 'Raise Change'
        steps:
          - task: ServiceNow-Change-Rasiser@0
            inputs:
              apiEndpoint: $(snowApi)
              deploymentsDictionaryAPI: $(deploymentsApi)
              buildNumber: '$(Build.BuildId)' #Must match in both stages
              currentRepository: '$(Build.Repository.Name)' #Must match in both stages
              deploymentEnvironment: '$(Environment)' #Must match in both stages
              apiUser: $(snowUsername)
              apiPassword: $(snowPassword)
              snShortDescription: 'Publish CDN Static-Content of $(Build.Repository.Name) to $(Environment)'
              snDescription: 'Publish Static-Content from $(Build.BuildId) of the CDN UI onto the Production stroage
                containers. $(Build.SourceVersionMessage)' #Commit message gets inserted as the description
              snJustification:
                'This change is required to allow the automated update of $(Build.Repository.Name) onto $(Environment)'
              snCategory: 'Applications Software'
              snTestPlan:
                'This change has been tested on the UAT and Conv environments. Once this has been deployed onto
                $(Environment), our QA team will carry out any testing that is required and provide signoff.'
              snRiskImpactAnalaysis: 'Any issues could mean that the content/images does not display correctly.'
              snImplementationPlan:
                'The pipeline will continue to run once this change is approved -
                $(System.TeamFoundationCollectionUri)$(System.TeamProject)/_build/?buildId=$(Build.BuildId). This will
                deploy $(Build.Repository.Name) onto $(Environment). The pipeline is being run from the following branch
                - $(Build.SourceBranch).'
              snBackoutPlan:
                'The current working release will be redeployed onto $(Environment) and the QA team will re-test to
                ensure that we are back to a working state.'
              snAssignmentGroup: 'eCommerce'
              snCmdbCi: amido.com'

  - stage: 'Check_ServiceNow_Change'
    displayName: 'Check ServiceNow Change'
    dependsOn:
      - Create_ServiceNow_Change
    condition: succeeded('Create_ServiceNow_Change')
    variables:
      - group: 'ServiceNow'
      - name: 'Environment'
        value: 'Production'
    jobs:
      - deployment: 'ServiceNowChangeCheck'
        environment: 'pd'
      - job: servicenow_change_status_check
        displayName: 'Check Change Status on ServiceNow'
        steps:
          - task: ServiceNow-Change-Status-Checker@0
            inputs:
              apiEndpoint: $(snowApi)
              deploymentsDictionaryAPI: $(deploymentsApi)
              buildNumber: '$(Build.BuildId)' #Must match in both stages
              currentRepository: '$(Build.Repository.Name)' #Must match in both stages
              deploymentEnvironment: '$(Environment)' #Must match in both stages
              apiUser: '$(snowUsername)'
              apiPassword: '$(snowPassword)'

  - stage: deploy_pd_eun
    displayName: 'Deploy to Production EUN'
    dependsOn:
      - Check_ServiceNow_Change
    condition: succeeded('Check_ServiceNow_Change')
    variables:
      - group: UI.Static-Content
      - group: PD.eCommerce.UI.Static-Content.Keys.EUN
    jobs:
      - template: azDevOps/azure/templates/jobs/upload-files-storageaccount.yml
        parameters:
          environmentName: 'pd'
          source_directory: '$(System.DefaultWorkingDirectory)'
          storage_account_name: '$(CDN-StorageAccount-Name)'
          storage_account_key: '$(CDN-StorageAccount-Key)'
          storage_container_name: '$(storage_container_name)'
          file_extentions: '$(file_extentions)'
          content_folder: '$(content_folder)'
          git_diff_upload: true
          delete_all_files: false

  - stage: deploy_pd_euw
    displayName: 'Deploy to Production EUW'
    dependsOn:
      - Check_ServiceNow_Change
    condition: succeeded('Check_ServiceNow_Change')
    variables:
      - group: UI.Static-Content
      - group: PD.eCommerce.UI.Static-Content.Keys.EUW
    jobs:
      - template: azDevOps/azure/templates/jobs/upload-files-storageaccount.yml
        parameters:
          environmentName: 'pd'
          source_directory: '$(System.DefaultWorkingDirectory)'
          storage_account_name: '$(CDN-StorageAccount-Name)'
          storage_account_key: '$(CDN-StorageAccount-Key)'
          storage_container_name: '$(storage_container_name)'
          file_extentions: '$(file_extentions)'
          content_folder: '$(content_folder)'
          git_diff_upload: true
          delete_all_files: false
